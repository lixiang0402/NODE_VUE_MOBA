* {
    outline: none;
    box-sizing: border-box;
}

html {
    font-size: 13px;
}

body {
    background-color: #f1f1f1;
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
}

a {
    color: #999;
}

// colors
$colors:("primary":#db9e3f,
    "white":#fff,
    "light":#f9f9f9,
    "grey":#999,
    "dark-1":#343440,
    "dark":#222,
    "black":#000,
);

@each $colorKey,
$color in $colors {
    .text-#{$colorKey} {
        color: $color;
    }

    .bg-#{$colorKey} {
        background-color: $color;
    }
}

// text
@each $var in (left, center, right) {
    .text-#{$var} {
        text-align: $var;
    }
}

//font size
$base-font-size:1rem;
$font-sizes: (xs:0.7692, //10px
    sm:0.9231, //12px
    md:1, //13px
    lg:1.0769, //14px
    xl:1.2308, //16px

);

@each $sizeKey,
$size in ($font-sizes) {
    .fs-#{$sizeKey} {
        font-size: $size*$base-font-size;
    }
}

// flex
.d-flex {
    display: flex;
}

.flex-clolumn {
    flex-direction: column;
}

$flex-jc:(start:flex-start,
    end:flex-end,
    center:center,
    between:space-between,
    around:space-around, );

@each $key,
$value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}

$flex-ai:(start:flex-start,
    end:flex-end,
    center:center,
    stretch:stretch, );

@each $key,
$value in $flex-ai {
    .jc-#{$key} {
        align-items: $value;
    }
}

.flex-1 {
    flex: 1
}

.flex-grow-1 {
    flex-grow: 1;
}

// mt-0

$spacing-types:(m:margin, p:padding);
$spacing-directions: (t:top, r:right, b:bottom, l:left);
$spacing-base-size:1rem;

$spacing-sizes:(0:0, 1:0.25, 2:0.5, 3:1, 4:1.5, 5:3);

@each $typeKey,
$type in $spacing-types {


    // m-1{margin:1rem}
    @each $sizeKey,
    $size in $spacing-sizes {
        .#{$typeKey}-#{$sizeKey} {
            #{$type}: $size * $spacing-base-size
        }
    }

    @each $sizeKey,
    $size in $spacing-sizes {

        // mx-1{margin-left:1 ;margin-right:1}
        .#{$typeKey}x-#{$sizeKey} {
            margin-left: $size * $spacing-base-size;
            margin-right: $size * $spacing-base-size;
        }

        // my-1{}
        .#{$typeKey}y-#{$sizeKey} {
            margin-top: $size * $spacing-base-size;
            margin-bottom: $size * $spacing-base-size;
        }
    }

    // .mt-1{margin-top:1rem}
    @each $directionKey,
    $direction in $spacing-directions {

        @each $sizeKey,
        $size in $spacing-sizes {

            .#{$typeKey}#{$directionKey}-#{$sizeKey} {
                #{$type}-#{$direction}: $size * $spacing-base-size
            }
        }
    }


}